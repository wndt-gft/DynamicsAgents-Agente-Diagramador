"""Playwright Visual Testing Generator - Generates visual regression testing suite."""

from typing import Dict, Any


def generate_visual_testing_suite(domain: str) -> str:
    """Generate visual testing suite for Playwright."""

    return f"""// tests/visual/{domain}_visual.spec.js
// Generated by PlaywrightWeb_Expert - Visual Testing Specialist
// Domain: {domain} | Visual Regression Testing

const {{ test, expect }} = require('@playwright/test');
const {{ {domain.title()}Page }} = require('../../pages/{domain}_page');

test.describe('Visual Regression Tests - {domain.title()}', () => {{
  let {domain}Page;

  test.beforeEach(async ({{ page }}) => {{
    {domain}Page = new {domain.title()}Page(page);
    await {domain}Page.navigate();
  }});

  test('Homepage visual comparison', async ({{ page }}) => {{
    await page.waitForLoadState('networkidle');
    
    // Take full page screenshot
    await expect(page).toHaveScreenshot('homepage-full.png', {{
      fullPage: true,
      threshold: 0.2,
      maxDiffPixels: 100
    }});
  }});

  test('Header section visual validation', async ({{ page }}) => {{
    const header = page.locator('header, [role="banner"], .header');
    await expect(header).toHaveScreenshot('header-section.png', {{
      threshold: 0.1
    }});
  }});

  test('Mobile layout visual comparison', async ({{ page }}) => {{
    await page.setViewportSize({{ width: 375, height: 667 }});
    await page.waitForTimeout(1000); // Allow layout to settle
    
    await expect(page).toHaveScreenshot('mobile-layout.png', {{
      fullPage: true,
      threshold: 0.3
    }});
  }});

  test('Cross-browser visual consistency', async ({{ page, browserName }}) => {{
    await page.waitForLoadState('networkidle');
    
    await expect(page).toHaveScreenshot(`cross-browser-${{browserName}}.png`, {{
      fullPage: true,
      threshold: 0.4,
      maxDiffPixels: 200
    }});
  }});
}});"""
